{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport * as echarts from 'echarts';\nexport default {\n  data() {\n    return {\n      option: {\n        legend: {},\n        tooltip: {\n          trigger: 'axis',\n          showContent: false\n        },\n        dataset: {\n          source: [['product', '2012', '2013', '2014', '2015', '2016', '2017'], ['Milk Tea', 56.5, 82.1, 88.7, 70.1, 53.4, 85.1], ['Matcha Latte', 51.1, 51.4, 55.1, 53.3, 73.8, 68.7], ['Cheese Cocoa', 40.1, 62.2, 69.5, 36.4, 45.2, 32.5], ['Walnut Brownie', 25.2, 37.1, 41.2, 18, 33.9, 49.1]]\n        },\n        xAxis: {\n          type: 'category'\n        },\n        yAxis: {\n          gridIndex: 0\n        },\n        grid: {\n          top: '50%',\n          bottom: '40'\n        },\n        series: [{\n          type: 'line',\n          smooth: true,\n          seriesLayoutBy: 'row',\n          emphasis: {\n            focus: 'series'\n          }\n        }, {\n          type: 'line',\n          smooth: true,\n          seriesLayoutBy: 'row',\n          emphasis: {\n            focus: 'series'\n          }\n        }, {\n          type: 'line',\n          smooth: true,\n          seriesLayoutBy: 'row',\n          emphasis: {\n            focus: 'series'\n          }\n        }, {\n          type: 'line',\n          smooth: true,\n          seriesLayoutBy: 'row',\n          emphasis: {\n            focus: 'series'\n          }\n        }, {\n          type: 'pie',\n          id: 'pie',\n          radius: '30%',\n          center: ['50%', '25%'],\n          emphasis: {\n            focus: 'self'\n          },\n          label: {\n            formatter: '{b}: {@2012} ({d}%)'\n          },\n          encode: {\n            itemName: 'product',\n            value: '2012',\n            tooltip: '2012'\n          }\n        }]\n      }\n    };\n  },\n  methods: {\n    // 配置echarts\n    initMychart() {\n      // 销毁实例(防止重复被复制)\n      if (this.myChart) {\n        this.myChart.dispose();\n      }\n      // 获得echart的DOM\n      let chartDom = this.$refs.char; // $refs[\"char\"]也行\n      // 初始化echart\n      this.myChart = echarts.init(chartDom, this.theme);\n      this.myChart.on('updateAxisPointer', function (event) {\n        const xAxisInfo = event.axesInfo[0];\n        if (xAxisInfo) {\n          const dimension = xAxisInfo.value + 1;\n          this.myChart.setOption({\n            series: {\n              id: 'pie',\n              label: {\n                formatter: '{b}: {@[' + dimension + ']} ({d}%)'\n              },\n              encode: {\n                value: dimension,\n                tooltip: dimension\n              }\n            }\n          });\n        }\n      });\n      this.option && this.myChart.setOption(this.option);\n    }\n  },\n  mounted() {\n    // echart入口函数\n    this.initMychart();\n  }\n};","map":{"version":3,"names":["echarts","data","option","legend","tooltip","trigger","showContent","dataset","source","xAxis","type","yAxis","gridIndex","grid","top","bottom","series","smooth","seriesLayoutBy","emphasis","focus","id","radius","center","label","formatter","encode","itemName","value","methods","initMychart","myChart","dispose","chartDom","$refs","char","init","theme","on","event","xAxisInfo","axesInfo","dimension","setOption","mounted"],"sources":["src/components/Index/IndexMain.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <el-carousel :interval=\"4000\" type=\"card\" height=\"200px\">\r\n            <el-carousel-item v-for=\"item in 6\" :key=\"item\">\r\n            <h3 class=\"medium\">{{ item }}</h3>\r\n            </el-carousel-item>\r\n        </el-carousel>\r\n\r\n        <div id=\"mycharts\" style=\"width: 100%; height: 400px\" ref=\"char\"></div>\r\n    </div>\r\n</template>\r\n  \r\n  <script>\r\nimport * as echarts from 'echarts'\r\n\r\n  export default {\r\n    data() {\r\n    return {\r\n      option: {\r\n        legend: {},\r\n        tooltip: {\r\n          trigger: 'axis',\r\n          showContent: false\r\n        },\r\n        dataset: {\r\n          source: [\r\n            ['product', '2012', '2013', '2014', '2015', '2016', '2017'],\r\n            ['Milk Tea', 56.5, 82.1, 88.7, 70.1, 53.4, 85.1],\r\n            ['Matcha Latte', 51.1, 51.4, 55.1, 53.3, 73.8, 68.7],\r\n            ['Cheese Cocoa', 40.1, 62.2, 69.5, 36.4, 45.2, 32.5],\r\n            ['Walnut Brownie', 25.2, 37.1, 41.2, 18, 33.9, 49.1]\r\n          ]\r\n        },\r\n        xAxis: { type: 'category' },\r\n        yAxis: { gridIndex: 0 },\r\n        grid: { top: '50%',bottom:'40' },\r\n        series: [\r\n          {\r\n            type: 'line',\r\n            smooth: true,\r\n            seriesLayoutBy: 'row',\r\n            emphasis: { focus: 'series' }\r\n          },\r\n          {\r\n            type: 'line',\r\n            smooth: true,\r\n            seriesLayoutBy: 'row',\r\n            emphasis: { focus: 'series' }\r\n          },\r\n          {\r\n            type: 'line',\r\n            smooth: true,\r\n            seriesLayoutBy: 'row',\r\n            emphasis: { focus: 'series' }\r\n          },\r\n          {\r\n            type: 'line',\r\n            smooth: true,\r\n            seriesLayoutBy: 'row',\r\n            emphasis: { focus: 'series' }\r\n          },\r\n          {\r\n            type: 'pie',\r\n            id: 'pie',\r\n            radius: '30%',\r\n            center: ['50%', '25%'],\r\n            emphasis: {\r\n              focus: 'self'\r\n            },\r\n            label: {\r\n              formatter: '{b}: {@2012} ({d}%)'\r\n            },\r\n            encode: {\r\n              itemName: 'product',\r\n              value: '2012',\r\n              tooltip: '2012'\r\n            }\r\n          }\r\n        ]\r\n      }\r\n    }\r\n  },\r\n    methods: {\r\n    // 配置echarts\r\n    initMychart() {\r\n      // 销毁实例(防止重复被复制)\r\n      if (this.myChart) {\r\n        this.myChart.dispose()\r\n      }\r\n      // 获得echart的DOM\r\n      let chartDom = this.$refs.char   // $refs[\"char\"]也行\r\n      // 初始化echart\r\n      this.myChart = echarts.init(chartDom, this.theme);\r\n      this.myChart.on('updateAxisPointer', function (event) {\r\n      const xAxisInfo = event.axesInfo[0];\r\n        if (xAxisInfo) {\r\n          const dimension = xAxisInfo.value + 1;\r\n          this.myChart.setOption({\r\n            series: {\r\n              id: 'pie',\r\n              label: {\r\n                formatter: '{b}: {@[' + dimension + ']} ({d}%)'\r\n              },\r\n              encode: {\r\n                value: dimension,\r\n                tooltip: dimension\r\n              }\r\n            }\r\n          });\r\n        }\r\n      });\r\n      this.option && this.myChart.setOption(this.option);\r\n    }\r\n  },\r\n  mounted() {\r\n     // echart入口函数\r\n     this.initMychart()\r\n  }\r\n  }\r\n  </script>\r\n  \r\n  <style scoped>\r\n .el-carousel__item h3 {\r\n    color: #475669;\r\n    font-size: 14px;\r\n    opacity: 0.75;\r\n    line-height: 200px;\r\n    margin: 0;\r\n  }\r\n  \r\n  .el-carousel__item:nth-child(2n) {\r\n    background-color: #99a9bf;\r\n  }\r\n  \r\n  .el-carousel__item:nth-child(2n+1) {\r\n    background-color: #d3dce6;\r\n  }\r\n  .el-carousel {\r\n    margin: 30px 20px;\r\n  }\r\n\r\n  #myHomeChart {\r\n    width: 800px;\r\n    height: 800px;\r\n  }\r\n  </style>"],"mappings":";;;;;;;;;;;;;AAaA,YAAAA,OAAA;AAEA;EACAC,KAAA;IACA;MACAC,MAAA;QACAC,MAAA;QACAC,OAAA;UACAC,OAAA;UACAC,WAAA;QACA;QACAC,OAAA;UACAC,MAAA,GACA,6DACA,kDACA,sDACA,sDACA;QAEA;QACAC,KAAA;UAAAC,IAAA;QAAA;QACAC,KAAA;UAAAC,SAAA;QAAA;QACAC,IAAA;UAAAC,GAAA;UAAAC,MAAA;QAAA;QACAC,MAAA,GACA;UACAN,IAAA;UACAO,MAAA;UACAC,cAAA;UACAC,QAAA;YAAAC,KAAA;UAAA;QACA,GACA;UACAV,IAAA;UACAO,MAAA;UACAC,cAAA;UACAC,QAAA;YAAAC,KAAA;UAAA;QACA,GACA;UACAV,IAAA;UACAO,MAAA;UACAC,cAAA;UACAC,QAAA;YAAAC,KAAA;UAAA;QACA,GACA;UACAV,IAAA;UACAO,MAAA;UACAC,cAAA;UACAC,QAAA;YAAAC,KAAA;UAAA;QACA,GACA;UACAV,IAAA;UACAW,EAAA;UACAC,MAAA;UACAC,MAAA;UACAJ,QAAA;YACAC,KAAA;UACA;UACAI,KAAA;YACAC,SAAA;UACA;UACAC,MAAA;YACAC,QAAA;YACAC,KAAA;YACAxB,OAAA;UACA;QACA;MAEA;IACA;EACA;EACAyB,OAAA;IACA;IACAC,YAAA;MACA;MACA,SAAAC,OAAA;QACA,KAAAA,OAAA,CAAAC,OAAA;MACA;MACA;MACA,IAAAC,QAAA,QAAAC,KAAA,CAAAC,IAAA;MACA;MACA,KAAAJ,OAAA,GAAA/B,OAAA,CAAAoC,IAAA,CAAAH,QAAA,OAAAI,KAAA;MACA,KAAAN,OAAA,CAAAO,EAAA,gCAAAC,KAAA;QACA,MAAAC,SAAA,GAAAD,KAAA,CAAAE,QAAA;QACA,IAAAD,SAAA;UACA,MAAAE,SAAA,GAAAF,SAAA,CAAAZ,KAAA;UACA,KAAAG,OAAA,CAAAY,SAAA;YACA3B,MAAA;cACAK,EAAA;cACAG,KAAA;gBACAC,SAAA,eAAAiB,SAAA;cACA;cACAhB,MAAA;gBACAE,KAAA,EAAAc,SAAA;gBACAtC,OAAA,EAAAsC;cACA;YACA;UACA;QACA;MACA;MACA,KAAAxC,MAAA,SAAA6B,OAAA,CAAAY,SAAA,MAAAzC,MAAA;IACA;EACA;EACA0C,QAAA;IACA;IACA,KAAAd,WAAA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}